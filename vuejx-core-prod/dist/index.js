"use strict";var __awaiter=this&&this.__awaiter||function(u,i,a,s){return new(a=a||Promise)(function(e,r){function t(e){try{n(s.next(e))}catch(e){r(e)}}function o(e){try{n(s.throw(e))}catch(e){r(e)}}function n(r){r.done?e(r.value):new a(function(e){e(r.value)}).then(t,o)}n((s=s.apply(u,i||[])).next())})},__generator=this&&this.__generator||function(t,o){var n,u,i,e,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return e={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function r(r){return function(e){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,u&&(i=2&r[0]?u.return:r[0]?u.throw||((i=u.return)&&i.call(u),0):u.next)&&!(i=i.call(u,r[1])).done)return i;switch(u=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return a.label++,{value:r[1],done:!1};case 5:a.label++,u=r[1],r=[0];continue;case 7:r=a.ops.pop(),a.trys.pop();continue;default:if(!(i=0<(i=a.trys).length&&i[i.length-1])&&(6===r[0]||2===r[0])){a=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){a.label=r[1];break}if(6===r[0]&&a.label<i[1]){a.label=i[1],i=r;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(r);break}i[2]&&a.ops.pop(),a.trys.pop();continue}r=o.call(t,a)}catch(e){r=[6,e],u=0}finally{n=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,e])}}},_this=this;Object.defineProperty(exports,"__esModule",{value:!0}),require("dotenv/config");var compress=require("koa-compress"),koa=require("koa"),helmet=require("koa-helmet"),cors=require("@koa/cors"),config_1=require("./config"),boostrap_1=require("./boostrap"),cluster=require("cluster"),bodyparser=require("koa-bodyparser"),apiRouter_1=require("./routes/apiRouter"),cpuCount=process.env.CLUSTER_NODE;boostrap_1.bootstrap().then(function(n){return __awaiter(_this,void 0,void 0,function(){var r,t,o;return __generator(this,function(e){if(cluster.isMaster){for(r=0;r<parseInt(cpuCount);r+=1)cluster.fork();cluster.on("exit",function(e){console.log("Worker %d died :(",e.id),cluster.fork()})}else t=new koa,o=config_1.PROJECT_PATH,t.use(bodyparser()),t.use(compress()),t.use(helmet()),t.use(cors()),t.use(apiRouter_1.default.routes()).use(apiRouter_1.default.allowedMethods()),n.applyMiddleware({app:t,path:o}),t.listen({port:config_1.ENV.PORT},function(){console.log("Server ready at http://"+config_1.host+":"+config_1.port+n.graphqlPath)});return[2]})})});